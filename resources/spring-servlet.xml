<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/aop    
                        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 		
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/mvc 
           				http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<bean id="jackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper" ref="objectMapper"/>
	</bean>
	<bean id="beanConverter" class="com.netcity.common.util.BeanConverter"></bean>
	<bean id="objectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="deserializersByType">
			<map key-type="java.lang.Class">
				<entry key="java.lang.Object">
					<ref bean="beanConverter" />
				</entry>
			</map>
		</property>
	</bean>
	<mvc:annotation-driven/>

	<context:component-scan base-package="com.netcity.controller" />

	<!-- 完成请求和注解POJO的映射 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> <property name="messageConverters"> 
		<list> <ref bean="mappingJacksonHttpMessageConverter" /> </list> </property> </bean> -->


	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:order="2">
	</bean>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="2">
		<property name="viewClass" value="com.netcity.common.util.HtmlResourceView" />
		<property name="viewNames" value="*.html" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="" />
		<property name="suffix" value="" />
	</bean>

	<!-- 模板解析器 -->
	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="suffix" value="" />
		<property name="templateMode" value="LEGACYHTML5" />
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="additionalDialects">
			<set>
				<bean class="at.pollux.thymeleaf.shiro.dialect.ShiroDialect" />
			</set>
		</property>
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver" p:order="0">
		<property name="viewNames" value="*.html" />
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor">
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
</beans>  